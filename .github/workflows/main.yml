name: "Deploy App"

on:
  push:
    branches:
      - main

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.3.0'
          cache: 'npm'

      - name: Install npm@10.8.1
        run: npm install -g npm@10.8.1

      - name: Build Frontend
        working-directory: ./frontend
        run: |
          npm install
          npm run build

      - name: Upload frontend build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: ./frontend/dist/

  build-backend:
    runs-on: ubuntu-latest
    needs: build-frontend
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Download frontend build artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: backend/src/main/resources/static/

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '22'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: mvn -B package --file backend/pom.xml

      - name: Upload backend build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ChatApp-0.0.1-SNAPSHOT.jar
          path: backend/target/ChatApp-0.0.1-SNAPSHOT.jar

  push-to-docker-hub:
    runs-on: ubuntu-latest
    needs: build-backend
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Download backend build artifact
        uses: actions/download-artifact@v4
        with:
          name: ChatApp-0.0.1-SNAPSHOT.jar
          path: backend/target

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_TAG }}

  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: push-to-docker-hub
    steps:
      - name: Trigger Render Deployment
        env:
          RENDER_DEPLOY: ${{ secrets.RENDER_DEPLOY }}
        run: |
          curl -X POST $RENDER_DEPLOY
